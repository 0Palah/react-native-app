{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  console.log(Platform.OS);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isShowKeyboard = _useState2[0],\n    setIsShowKeyboard = _useState2[1];\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      style: styles.image,\n      source: require(\"./assets/photo-bg.jpg\"),\n      children: _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        children: _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.form), {}, {\n            marginBottom: isShowKeyboard ? 20 : 100\n          }),\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.inputTitle,\n              children: \"EMAIL ADDRES\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              textAlign: \"center\",\n              onFocus: function onFocus() {\n                return setIsShowKeyboard(true);\n              }\n            })]\n          }), _jsxs(View, {\n            style: {\n              marginTop: 20\n            },\n            children: [_jsx(Text, {\n              style: styles.inputTitle,\n              children: \"PASSWORD\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              textAlign: \"center\",\n              secureTextEntry: true,\n              onFocus: function onFocus() {\n                return setIsShowKeyboard(true);\n              }\n            })]\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 0.8,\n            style: styles.btn,\n            children: _jsx(Text, {\n              style: styles.btnTitle,\n              children: \"SIGN IN\"\n            })\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#f0f8ff\",\n    height: 40,\n    borderRadius: 6,\n    color: \"#f0f8ff\"\n  },\n  form: {\n    marginHorizontal: 40\n  },\n  inputTitle: {\n    color: \"#f0f8ff\",\n    marginBottom: 10,\n    fontSize: 18\n  },\n  btn: _objectSpread({\n    borderRadius: 6,\n    borderWidth: 1,\n    height: 40,\n    marginTop: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 20\n  }, Platform.select({\n    ios: {\n      backgroundColor: \"transparent\",\n      borderColor: \"#f0f8ff\"\n    },\n    android: {\n      backgroundColor: \"#4169e1\",\n      borderColor: \"transparent\"\n    }\n  })),\n  btnTitle: {\n    color: Platform.OS === \"ios\" ? \"#4169e1\" : \"#f0f8ff\",\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useState","App","console","log","Platform","OS","isShowKeyboard","setIsShowKeyboard","styles","container","image","require","form","marginBottom","inputTitle","input","marginTop","btn","btnTitle","StyleSheet","create","flex","backgroundColor","resizeMode","justifyContent","borderWidth","borderColor","height","borderRadius","color","marginHorizontal","fontSize","alignItems","select","ios","android"],"sources":["F:/it/react-native-app/App.js"],"sourcesContent":["// import { StatusBar } from \"expo-status-bar\";\n// import React, { useState } from \"react\";\n// import {\n//   StyleSheet,\n//   Text,\n//   View,\n//   TextInput,\n//   ImageBackground,\n//   TouchableOpacity,\n//   Platform,\n//   KeyboardAvoidingView,\n// } from \"react-native\";\n\n// export default function App() {\n//   const [loginValue, setLoginValue] = useState(\"\");\n//   const [emailValue, setEmailValue] = useState(\"\");\n//   const [passwordValue, setPasswordValue] = useState(\"\");\n//   const [platform, setPlatform] = useState(\"\");\n\n//   const inputHandlerLogin = (text) => setLoginValue(text);\n//   const inputHandlerEmail = (text) => setEmailValue(text);\n//   const inputHandlerPassword = (text) => setPasswordValue(text);\n//   console.log(Platform.OS);\n\n//   return (\n//     <View style={styles.container}>\n//       <StatusBar style=\"auto\" />\n//       <ImageBackground\n//         source={require(\"./assets/photo-bg.jpg\")}\n//         style={styles.imgBG}\n//       >\n//         <KeyboardAvoidingView\n//           behavior={Platform.OS === \"ios\" ? \"padding\" : \"position\"}\n//         >\n//           <View style={styles.formWrapper}>\n//             <View style={styles.titleWrapper}>\n//               <Text style={styles.title}>Регистрация</Text>\n//             </View>\n//             <View style={styles.inpupWrapperLoginEmail}>\n//               <TextInput\n//                 style={styles.inputLoginEmail}\n//                 placeholder=\"Логин\"\n//                 placeholderTextColor=\"#BDBDBD\"\n//                 value={loginValue}\n//                 onChangeText={inputHandlerLogin}\n//               />\n//             </View>\n//             <View style={styles.inpupWrapperLoginEmail}>\n//               <TextInput\n//                 style={styles.inputLoginEmail}\n//                 placeholder=\"Адрес электронной почты\"\n//                 placeholderTextColor=\"#BDBDBD\"\n//                 value={emailValue}\n//                 onChangeText={inputHandlerEmail}\n//               />\n//             </View>\n//             <View style={styles.inpupWrapperPassword}>\n//               <TextInput\n//                 style={styles.inputPassword}\n//                 placeholder=\"Пароль\"\n//                 placeholderTextColor=\"#BDBDBD\"\n//                 value={passwordValue}\n//                 onChangeText={inputHandlerPassword}\n//                 secureTextEntry={true}\n//               />\n//             </View>\n//             <TouchableOpacity\n//               style={styles.btn}\n//               activeOpacity={0.7}\n//               // onPress={onPress}\n//             >\n//               <Text style={styles.btnName}>Зарегистрироваться</Text>\n//             </TouchableOpacity>\n//             <TouchableOpacity\n//               style={styles.link}\n//               activeOpacity={0.7}\n//               // onPress={onPress}\n//             >\n//               <Text style={styles.linkName}>Уже есть аккаунт? Войти</Text>\n//             </TouchableOpacity>\n//           </View>\n//         </KeyboardAvoidingView>\n//       </ImageBackground>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: \"#fff\",\n//     // alignItems: \"center\",\n//     // justifyContent: \"center\",\n//   },\n\n//   imgBG: {\n//     flex: 1,\n//     resizeMode: \"cover\",\n//     justifyContent: \"flex-end\",\n//     // alignItems: \"center\",\n//   },\n\n//   formWrapper: {\n//     // height: 550,\n//     paddingHorizontal: 16,\n//     paddingTop: 92,\n//     paddingBottom: 78,\n//     borderTopLeftRadius: 25,\n//     borderTopRightRadius: 25,\n//     backgroundColor: \"#fff\",\n//   },\n\n//   titleWrapper: {\n//     alignItems: \"center\",\n//     marginBottom: 32,\n//   },\n\n//   title: {\n//     // marginTop: 92,\n//     color: `#212121`,\n//     fontSize: 30,\n//     letterSpacing: 0.01,\n//     // fontWeight: 500,\n//     // lineHeight: 35,\n//     // font-family: 'Roboto';\n//     // font-style: normal;\n//   },\n\n//   inpupWrapperLoginEmail: {\n//     marginBottom: 16,\n//   },\n\n//   inputLoginEmail: {\n//     borderWidth: 1,\n//     borderColor: \"#E8E8E8\",\n//     borderRadius: 8,\n//     backgroundColor: \"#F6F6F6\",\n//     height: 50,\n//     paddingHorizontal: 16,\n//     // placeholderTextColor: \"#BDBDBD\",\n//   },\n\n//   inpupWrapperPassword: {\n//     marginBottom: 43,\n//   },\n\n//   inputPassword: {\n//     borderWidth: 1,\n//     borderColor: \"#E8E8E8\",\n//     borderRadius: 8,\n//     backgroundColor: \"#F6F6F6\",\n//     height: 50,\n//     paddingHorizontal: 16,\n//   },\n\n//   btn: {\n//     backgroundColor: \"#FF6C00\",\n//     height: 51,\n//     borderRadius: 100,\n//     paddingVertical: 16,\n//   },\n\n//   btnName: {\n//     fontSize: 16,\n//     color: \"#ffffff\",\n//     textAlign: \"center\",\n//   },\n\n//   link: {\n//     marginTop: 16,\n//   },\n\n//   linkName: {\n//     fontSize: 16,\n//     color: \"#1B4371\",\n//     textAlign: \"center\",\n//   },\n\n//   // // варіанти по заданню різних платформ\n//   // test: {\n//   //   backgroundColor: Platform.OS === \"ios\" ? \"red\" : \"green\", // варіант  через тернарник\n\n//   //   // Варіант через select який повертає обєкт\n//   //   ...Platform.select({\n//   //     ios: {\n//   //       backgroundColor: \"red\",\n//   //     },\n//   //     android: {\n//   //       backgroundColor: \"green\",\n//   //     },\n//   //     default: {\n//   //       // other platforms, web for example\n//   //       backgroundColor: \"blue\",\n//   //     },\n//   //   }),\n//   // },\n// });\n\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  TextInput,\n  TouchableOpacity,\n  Platform,\n  KeyboardAvoidingView,\n} from \"react-native\";\n\nexport default function App() {\n  console.log(Platform.OS);\n  const [isShowKeyboard, setIsShowKeyboard] = useState(false);\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground\n        style={styles.image}\n        source={require(\"./assets/photo-bg.jpg\")}\n      >\n        <KeyboardAvoidingView\n          behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n        >\n          <View\n            style={{ ...styles.form, marginBottom: isShowKeyboard ? 20 : 100 }}\n          >\n            <View>\n              <Text style={styles.inputTitle}>EMAIL ADDRES</Text>\n              <TextInput\n                style={styles.input}\n                textAlign={\"center\"}\n                onFocus={() => setIsShowKeyboard(true)}\n              />\n            </View>\n            <View style={{ marginTop: 20 }}>\n              <Text style={styles.inputTitle}>PASSWORD</Text>\n              <TextInput\n                style={styles.input}\n                textAlign={\"center\"}\n                secureTextEntry={true}\n                onFocus={() => setIsShowKeyboard(true)}\n              />\n            </View>\n            <TouchableOpacity activeOpacity={0.8} style={styles.btn}>\n              <Text style={styles.btnTitle}>SIGN IN</Text>\n            </TouchableOpacity>\n          </View>\n        </KeyboardAvoidingView>\n      </ImageBackground>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n    // justifyContent: \"center\",\n    // alignItems: \"center\",\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#f0f8ff\",\n    height: 40,\n    borderRadius: 6,\n\n    color: \"#f0f8ff\",\n  },\n  form: {\n    marginHorizontal: 40,\n  },\n  inputTitle: {\n    color: \"#f0f8ff\",\n    marginBottom: 10,\n    fontSize: 18,\n  },\n  btn: {\n    borderRadius: 6,\n    borderWidth: 1,\n    height: 40,\n    marginTop: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 20,\n    ...Platform.select({\n      ios: {\n        backgroundColor: \"transparent\",\n        borderColor: \"#f0f8ff\",\n      },\n      android: {\n        backgroundColor: \"#4169e1\",\n        borderColor: \"transparent\",\n      },\n    }),\n  },\n  btnTitle: {\n    color: Platform.OS === \"ios\" ? \"#4169e1\" : \"#f0f8ff\",\n    fontSize: 18,\n  },\n});\n"],"mappings":";;;;AAsMA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYxC,eAAe,SAASC,GAAG,GAAG;EAC5BC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACC,EAAE,CAAC;EACxB,gBAA4CL,QAAQ,CAAC,KAAK,CAAC;IAAA;IAApDM,cAAc;IAAEC,iBAAiB;EAExC,OACE,KAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UAC5B,KAAC,eAAe;MACd,KAAK,EAAED,MAAM,CAACE,KAAM;MACpB,MAAM,EAAEC,OAAO,yBAA0B;MAAA,UAEzC,KAAC,oBAAoB;QACnB,QAAQ,EAAEP,QAAQ,CAACC,EAAE,IAAI,KAAK,GAAG,SAAS,GAAG,QAAS;QAAA,UAEtD,MAAC,IAAI;UACH,KAAK,kCAAOG,MAAM,CAACI,IAAI;YAAEC,YAAY,EAAEP,cAAc,GAAG,EAAE,GAAG;UAAG,EAAG;UAAA,WAEnE,MAAC,IAAI;YAAA,WACH,KAAC,IAAI;cAAC,KAAK,EAAEE,MAAM,CAACM,UAAW;cAAA,UAAC;YAAY,EAAO,EACnD,KAAC,SAAS;cACR,KAAK,EAAEN,MAAM,CAACO,KAAM;cACpB,SAAS,EAAE,QAAS;cACpB,OAAO,EAAE;gBAAA,OAAMR,iBAAiB,CAAC,IAAI,CAAC;cAAA;YAAC,EACvC;UAAA,EACG,EACP,MAAC,IAAI;YAAC,KAAK,EAAE;cAAES,SAAS,EAAE;YAAG,CAAE;YAAA,WAC7B,KAAC,IAAI;cAAC,KAAK,EAAER,MAAM,CAACM,UAAW;cAAA,UAAC;YAAQ,EAAO,EAC/C,KAAC,SAAS;cACR,KAAK,EAAEN,MAAM,CAACO,KAAM;cACpB,SAAS,EAAE,QAAS;cACpB,eAAe,EAAE,IAAK;cACtB,OAAO,EAAE;gBAAA,OAAMR,iBAAiB,CAAC,IAAI,CAAC;cAAA;YAAC,EACvC;UAAA,EACG,EACP,KAAC,gBAAgB;YAAC,aAAa,EAAE,GAAI;YAAC,KAAK,EAAEC,MAAM,CAACS,GAAI;YAAA,UACtD,KAAC,IAAI;cAAC,KAAK,EAAET,MAAM,CAACU,QAAS;cAAA,UAAC;YAAO;UAAO,EAC3B;QAAA;MACd;IACc;EACP,EACb;AAEX;AAEA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDZ,KAAK,EAAE;IACLW,IAAI,EAAE,CAAC;IACPE,UAAU,EAAE,OAAO;IACnBC,cAAc,EAAE;EAGlB,CAAC;EACDT,KAAK,EAAE;IACLU,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IAEfC,KAAK,EAAE;EACT,CAAC;EACDjB,IAAI,EAAE;IACJkB,gBAAgB,EAAE;EACpB,CAAC;EACDhB,UAAU,EAAE;IACVe,KAAK,EAAE,SAAS;IAChBhB,YAAY,EAAE,EAAE;IAChBkB,QAAQ,EAAE;EACZ,CAAC;EACDd,GAAG;IACDW,YAAY,EAAE,CAAC;IACfH,WAAW,EAAE,CAAC;IACdE,MAAM,EAAE,EAAE;IACVX,SAAS,EAAE,EAAE;IACbQ,cAAc,EAAE,QAAQ;IACxBQ,UAAU,EAAE,QAAQ;IACpBF,gBAAgB,EAAE;EAAE,GACjB1B,QAAQ,CAAC6B,MAAM,CAAC;IACjBC,GAAG,EAAE;MACHZ,eAAe,EAAE,aAAa;MAC9BI,WAAW,EAAE;IACf,CAAC;IACDS,OAAO,EAAE;MACPb,eAAe,EAAE,SAAS;MAC1BI,WAAW,EAAE;IACf;EACF,CAAC,CAAC,CACH;EACDR,QAAQ,EAAE;IACRW,KAAK,EAAEzB,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,SAAS,GAAG,SAAS;IACpD0B,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}