{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PostsScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  useEffect(function () {\n    if (route.params) {\n      setPosts(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), [route.params]);\n      });\n    }\n  }, [route.params]);\n  console.log(\"PostsScreen --> posts: \", posts);\n  console.log(\"PostsScreen --> route.params: \", route.params);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      style: styles.list,\n      data: posts,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(View, {\n          style: styles.postWrapper,\n          children: [_jsx(View, {\n            style: styles.imgWrapper,\n            children: _jsx(Image, {\n              source: {\n                uri: item.photo\n              },\n              style: styles.img\n            })\n          }), _jsx(View, {\n            children: _jsxs(Text, {\n              style: styles.postTitle,\n              children: [item.title, \" \"]\n            })\n          }), _jsx(Text, {\n            style: styles.location,\n            children: item.location\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item, idx) {\n        return idx.toString();\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 16\n  },\n  list: {},\n  postWrapper: {\n    marginTop: 32\n  },\n  imgWrapper: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  img: {\n    width: 340,\n    height: 240,\n    borderRadius: 8,\n    objectFit: \"cover\"\n  },\n  postTitle: {\n    marginTop: 8,\n    fontSize: 16,\n    fontWeight: \"500\",\n    fontFamily: \"Roboto-Medium\",\n    color: \"#212121\"\n  },\n  location: {\n    textAlign: \"right\",\n    fontSize: 16,\n    fontFamily: \"Roboto-Regular\",\n    color: \"#212121\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","PostsScreen","route","posts","setPosts","params","prevState","console","log","styles","container","list","item","postWrapper","imgWrapper","uri","photo","img","postTitle","title","location","idx","toString","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","marginTop","width","height","borderRadius","objectFit","fontSize","fontWeight","fontFamily","color","textAlign"],"sources":["F:/it/react-native-app/Screens/mainScreen/PostsScreen.js"],"sourcesContent":["// import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, Text, View, FlatList, Image } from \"react-native\";\r\n// import { Ionicons } from \"@expo/vector-icons\";\r\n// const PostsScreen = () => {\r\n\r\nexport default function PostsScreen({ route }) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (route.params) {\r\n      setPosts((prevState) => [...prevState, route.params]);\r\n    }\r\n\r\n    // return () => {\r\n    //   second;\r\n    // };\r\n  }, [route.params]);\r\n\r\n  console.log(\"PostsScreen --> posts: \", posts);\r\n  console.log(\"PostsScreen --> route.params: \", route.params);\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <View style={styles.heder}>\r\n        <Text>Публикации</Text>\r\n      </View> */}\r\n\r\n      <FlatList\r\n        style={styles.list}\r\n        data={posts}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.postWrapper}>\r\n            <View style={styles.imgWrapper}>\r\n              <Image source={{ uri: item.photo }} style={styles.img} />\r\n            </View>\r\n\r\n            <View>\r\n              <Text style={styles.postTitle}>{item.title} </Text>\r\n            </View>\r\n            <Text style={styles.location}>{item.location}</Text>\r\n          </View>\r\n        )}\r\n        keyExtractor={(item, idx) => idx.toString()}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 16,\r\n  },\r\n\r\n  // heder: {\r\n  //   color: \"#212121\",\r\n  // },\r\n\r\n  list: {},\r\n\r\n  postWrapper: {\r\n    marginTop: 32,\r\n  },\r\n\r\n  imgWrapper: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  img: {\r\n    width: 340,\r\n    height: 240,\r\n    borderRadius: 8,\r\n    objectFit: \"cover\",\r\n  },\r\n\r\n  postTitle: {\r\n    marginTop: 8,\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n    fontFamily: \"Roboto-Medium\",\r\n    color: \"#212121\",\r\n  },\r\n\r\n  location: {\r\n    textAlign: \"right\",\r\n    fontSize: 16,\r\n    fontFamily: \"Roboto-Regular\",\r\n    color: \"#212121\",\r\n  },\r\n});\r\n\r\n// export default PostsScreen;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKnD,eAAe,SAASC,WAAW,OAAY;EAAA,IAATC,KAAK,QAALA,KAAK;EACzC,gBAA0BF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BG,KAAK;IAAEC,QAAQ;EAEtBL,SAAS,CAAC,YAAM;IACd,IAAIG,KAAK,CAACG,MAAM,EAAE;MAChBD,QAAQ,CAAC,UAACE,SAAS;QAAA,oCAASA,SAAS,IAAEJ,KAAK,CAACG,MAAM;MAAA,CAAC,CAAC;IACvD;EAKF,CAAC,EAAE,CAACH,KAAK,CAACG,MAAM,CAAC,CAAC;EAElBE,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,KAAK,CAAC;EAC7CI,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEN,KAAK,CAACG,MAAM,CAAC;EAC3D,OACE,KAAC,IAAI;IAAC,KAAK,EAAEI,MAAM,CAACC,SAAU;IAAA,UAK5B,KAAC,QAAQ;MACP,KAAK,EAAED,MAAM,CAACE,IAAK;MACnB,IAAI,EAAER,KAAM;MACZ,UAAU,EAAE;QAAA,IAAGS,IAAI,SAAJA,IAAI;QAAA,OACjB,MAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,WAAY;UAAA,WAC9B,KAAC,IAAI;YAAC,KAAK,EAAEJ,MAAM,CAACK,UAAW;YAAA,UAC7B,KAAC,KAAK;cAAC,MAAM,EAAE;gBAAEC,GAAG,EAAEH,IAAI,CAACI;cAAM,CAAE;cAAC,KAAK,EAAEP,MAAM,CAACQ;YAAI;UAAG,EACpD,EAEP,KAAC,IAAI;YAAA,UACH,MAAC,IAAI;cAAC,KAAK,EAAER,MAAM,CAACS,SAAU;cAAA,WAAEN,IAAI,CAACO,KAAK,EAAC,GAAC;YAAA;UAAO,EAC9C,EACP,KAAC,IAAI;YAAC,KAAK,EAAEV,MAAM,CAACW,QAAS;YAAA,UAAER,IAAI,CAACQ;UAAQ,EAAQ;QAAA,EAC/C;MAAA,CACP;MACF,YAAY,EAAE,sBAACR,IAAI,EAAES,GAAG;QAAA,OAAKA,GAAG,CAACC,QAAQ,EAAE;MAAA;IAAC;EAC5C,EACG;AAEX;AAEA,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,iBAAiB,EAAE;EACrB,CAAC;EAMDlB,IAAI,EAAE,CAAC,CAAC;EAERE,WAAW,EAAE;IACXiB,SAAS,EAAE;EACb,CAAC;EAEDhB,UAAU,EAAE;IACVa,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAEDX,GAAG,EAAE;IACHc,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EAEDhB,SAAS,EAAE;IACTY,SAAS,EAAE,CAAC;IACZK,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAE,eAAe;IAC3BC,KAAK,EAAE;EACT,CAAC;EAEDlB,QAAQ,EAAE;IACRmB,SAAS,EAAE,OAAO;IAClBJ,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE,gBAAgB;IAC5BC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}