{"ast":null,"code":"import React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nvar AuthStack = createNativeStackNavigator();\nvar MainTab = createBottomTabNavigator();\nimport RegistrationScreen from \"./Screens/RegistrationScreen\";\nimport LoginScreen from \"./Screens/LoginScreen\";\nimport PostsScreen from \"./Screens/mainScreen/PostsScreen\";\nimport CreateScreen from \"./Screens/mainScreen/CreateScreen\";\nimport ProfileScreen from \"./Screens/mainScreen/ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useRoute = function useRoute(isAuth) {\n  if (!isAuth) {\n    return _jsxs(AuthStack.Navigator, {\n      children: [_jsx(AuthStack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Registration\",\n        component: RegistrationScreen\n      }), _jsx(AuthStack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Login\",\n        component: LoginScreen\n      })]\n    });\n  }\n  return _jsxs(MainTab.Navigator, {\n    screenOptions: styles.mainTabContainer,\n    children: [_jsx(MainTab.Screen, {\n      name: \"Posts\",\n      component: PostsScreen,\n      options: {\n        title: \"Публикации\",\n        headerStyle: {\n          height: 83,\n          borderBottomWidth: 1,\n          borderColor: \"#E8E8E8\"\n        },\n        headerTitleContainerStyle: {\n          paddingBottom: 11,\n          marginRight: 0\n        },\n        headerTitleStyle: {\n          fontWeight: \"500\",\n          fontSize: 17,\n          letterSpacing: -0.408,\n          color: \"#212121\",\n          marginTop: \"auto\"\n        },\n        headerRightContainerStyle: {\n          paddingRight: 16,\n          marginTop: \"auto\",\n          marginBottom: 11\n        },\n        headerRight: function headerRight(focused, color, size) {\n          return _jsx(Feather, {\n            name: \"log-out\",\n            size: 24,\n            color: \"#BDBDBD\"\n          });\n        },\n        tabBarShowLabel: false,\n        tabBarIcon: function tabBarIcon(focused, color, size) {\n          return _jsx(SimpleLineIcons, {\n            name: \"grid\",\n            size: 24,\n            color: \"#212121CC\"\n          });\n        }\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"Create post\",\n      component: CreateScreen,\n      options: {\n        title: \"Создать публикацию\",\n        headerStyle: {\n          height: 83,\n          borderBottomWidth: 1,\n          borderColor: \"#E8E8E8\"\n        },\n        tabBarStyle: {},\n        headerTitleContainerStyle: {\n          paddingBottom: 11,\n          marginLeft: 0\n        },\n        headerTitleStyle: {\n          fontWeight: \"500\",\n          fontSize: 17,\n          letterSpacing: -0.408,\n          color: \"#212121\",\n          marginTop: \"auto\"\n        },\n        headerLeftContainerStyle: {\n          paddingLeft: 16,\n          marginTop: \"auto\",\n          marginBottom: 11\n        },\n        headerLeft: function headerLeft(focused, color, size) {\n          return _jsx(AntDesign, {\n            name: \"arrowleft\",\n            size: 24,\n            color: \"#212121CC\",\n            onPress: function onPress() {}\n          });\n        },\n        tabBarShowLabel: false,\n        tabBarIcon: function tabBarIcon(focused, color, size) {\n          return _jsx(View, {\n            style: styles.mainTabBtn,\n            children: _jsx(AntDesign, {\n              name: \"plus\",\n              size: 13,\n              color: \"#FFFFFF\"\n            })\n          });\n        }\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false,\n        tabBarShowLabel: false,\n        tabBarIcon: function tabBarIcon(focused, color, size) {\n          return _jsx(Feather, {\n            name: \"user\",\n            size: 24,\n            color: \"#212121CC\"\n          });\n        }\n      }\n    })]\n  });\n};\nexport default useRoute;\nvar styles = StyleSheet.create({\n  mainTabContainer: {\n    headerTitleAlign: \"center\",\n    tabBarStyle: {\n      height: 83,\n      paddingTop: 9,\n      paddingBottom: 34,\n      paddingHorizontal: 82\n    }\n  },\n  mainTabBtn: {\n    height: 40,\n    width: 70,\n    borderWidth: 0,\n    borderRadius: 20,\n    backgroundColor: \"#FF6C00\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","StatusBar","createNativeStackNavigator","createBottomTabNavigator","SimpleLineIcons","Feather","AntDesign","AuthStack","MainTab","RegistrationScreen","LoginScreen","PostsScreen","CreateScreen","ProfileScreen","useRoute","isAuth","headerShown","styles","mainTabContainer","title","headerStyle","height","borderBottomWidth","borderColor","headerTitleContainerStyle","paddingBottom","marginRight","headerTitleStyle","fontWeight","fontSize","letterSpacing","color","marginTop","headerRightContainerStyle","paddingRight","marginBottom","headerRight","focused","size","tabBarShowLabel","tabBarIcon","tabBarStyle","marginLeft","headerLeftContainerStyle","paddingLeft","headerLeft","mainTabBtn","StyleSheet","create","headerTitleAlign","paddingTop","paddingHorizontal","width","borderWidth","borderRadius","backgroundColor","alignItems","justifyContent"],"sources":["F:/it/react-native-app/router.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport { StyleSheet, View, Button, Pressable } from \"react-native\";\r\n\r\nconst AuthStack = createNativeStackNavigator();\r\nconst MainTab = createBottomTabNavigator();\r\n\r\nimport RegistrationScreen from \"./Screens/RegistrationScreen\";\r\nimport LoginScreen from \"./Screens/LoginScreen\";\r\nimport PostsScreen from \"./Screens/mainScreen/PostsScreen\";\r\nimport CreateScreen from \"./Screens/mainScreen/CreateScreen\";\r\nimport ProfileScreen from \"./Screens/mainScreen/ProfileScreen\";\r\n\r\nconst useRoute = (isAuth) => {\r\n  if (!isAuth) {\r\n    return (\r\n      <AuthStack.Navigator>\r\n        <AuthStack.Screen\r\n          options={{\r\n            headerShown: false,\r\n          }}\r\n          name=\"Registration\"\r\n          component={RegistrationScreen}\r\n        />\r\n        <AuthStack.Screen\r\n          options={{\r\n            headerShown: false,\r\n          }}\r\n          name=\"Login\"\r\n          component={LoginScreen}\r\n        />\r\n      </AuthStack.Navigator>\r\n    );\r\n  }\r\n  return (\r\n    // <MainTab.Navigator screenOptions={styles.mainTabContainer}>\r\n    <MainTab.Navigator screenOptions={styles.mainTabContainer}>\r\n      <MainTab.Screen\r\n        name=\"Posts\"\r\n        component={PostsScreen}\r\n        options={{\r\n          title: \"Публикации\",\r\n          headerStyle: {\r\n            height: 83,\r\n            borderBottomWidth: 1,\r\n            borderColor: \"#E8E8E8\",\r\n          },\r\n\r\n          headerTitleContainerStyle: {\r\n            paddingBottom: 11,\r\n            marginRight: 0,\r\n          },\r\n\r\n          headerTitleStyle: {\r\n            fontWeight: \"500\",\r\n            fontSize: 17,\r\n            letterSpacing: -0.408,\r\n            color: \"#212121\",\r\n            marginTop: \"auto\",\r\n          },\r\n\r\n          headerRightContainerStyle: {\r\n            paddingRight: 16,\r\n            marginTop: \"auto\",\r\n            marginBottom: 11,\r\n            // color: \"#BDBDBD\",\r\n          },\r\n\r\n          headerRight: (focused, color, size) => (\r\n            // <Pressable\r\n            //   onPress={() => {\r\n            //     console.log(123);\r\n            //     navigation.navigate(\"Login\");\r\n            //   }}\r\n            // >\r\n            //   <Feather name=\"log-out\" size={24} color=\"black\" />\r\n            // </Pressable>\r\n            <Feather name=\"log-out\" size={24} color=\"#BDBDBD\" />\r\n          ),\r\n\r\n          tabBarShowLabel: false,\r\n\r\n          tabBarIcon: (focused, color, size) => (\r\n            <SimpleLineIcons name=\"grid\" size={24} color=\"#212121CC\" />\r\n          ),\r\n        }}\r\n      />\r\n      <MainTab.Screen\r\n        name=\"Create post\"\r\n        component={CreateScreen}\r\n        options={{\r\n          title: \"Создать публикацию\",\r\n          headerStyle: {\r\n            height: 83,\r\n            borderBottomWidth: 1,\r\n            borderColor: \"#E8E8E8\",\r\n            // paddingBottom: 11,\r\n            // backgroundColor: \"red\",\r\n          },\r\n\r\n          tabBarStyle: {\r\n            // display: \"none\",\r\n          },\r\n\r\n          headerTitleContainerStyle: {\r\n            // height: 88,\r\n            paddingBottom: 11,\r\n            marginLeft: 0,\r\n          },\r\n\r\n          headerTitleStyle: {\r\n            fontWeight: \"500\",\r\n            fontSize: 17,\r\n            letterSpacing: -0.408,\r\n            color: \"#212121\",\r\n            marginTop: \"auto\",\r\n          },\r\n\r\n          headerLeftContainerStyle: {\r\n            paddingLeft: 16,\r\n            marginTop: \"auto\",\r\n            marginBottom: 11,\r\n          },\r\n\r\n          headerLeft: (focused, color, size) => (\r\n            // <Pressable\r\n            //   onPress={() => {\r\n            //     console.log(123);\r\n            //     navigation.navigate(\"Login\");\r\n            //   }}\r\n            // >\r\n            //   <Feather name=\"log-out\" size={24} color=\"black\" />\r\n            // </Pressable>\r\n            <AntDesign\r\n              name=\"arrowleft\"\r\n              size={24}\r\n              color=\"#212121CC\"\r\n              onPress={() => {}}\r\n            />\r\n          ),\r\n\r\n          tabBarShowLabel: false,\r\n          // tabBarLabel: (focused, color) => (\r\n          //   <View style={styles.mainTabBtn}>\r\n          //     <AntDesign name=\"plus\" size={13} color=\"#FFFFFF\" />\r\n          //   </View>\r\n          // ),\r\n\r\n          tabBarIcon: (focused, color, size) => (\r\n            <View style={styles.mainTabBtn}>\r\n              <AntDesign name=\"plus\" size={13} color=\"#FFFFFF\" />\r\n            </View>\r\n          ),\r\n        }}\r\n      />\r\n      <MainTab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileScreen}\r\n        options={{\r\n          headerShown: false,\r\n          tabBarShowLabel: false,\r\n          tabBarIcon: (focused, color, size) => (\r\n            <Feather name=\"user\" size={24} color=\"#212121CC\" />\r\n          ),\r\n        }}\r\n      />\r\n    </MainTab.Navigator>\r\n  );\r\n};\r\n\r\nexport default useRoute;\r\n\r\nconst styles = StyleSheet.create({\r\n  mainTabContainer: {\r\n    headerTitleAlign: \"center\",\r\n\r\n    tabBarStyle: {\r\n      height: 83,\r\n      paddingTop: 9,\r\n      paddingBottom: 34,\r\n      paddingHorizontal: 82,\r\n    },\r\n  },\r\n\r\n  mainTabBtn: {\r\n    height: 40,\r\n    width: 70,\r\n    borderWidth: 0,\r\n    borderRadius: 20,\r\n    backgroundColor: \"#FF6C00\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}