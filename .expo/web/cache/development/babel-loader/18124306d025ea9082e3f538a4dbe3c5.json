{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nvar loadFonts = function () {\n  var _ref = _asyncToGenerator(function* () {\n    yield Font.loadAsync({\n      \"Roboto-Regulat\": require(\"./assets/fonts/Roboto/Roboto-Regular.ttf\"),\n      \"Roboto-Medium\": require(\"./assets/fonts/Roboto/Roboto-Medium.ttf\")\n    });\n  });\n  return function loadFonts() {\n    return _ref.apply(this, arguments);\n  };\n}();\nimport RegistrationScreen from \"./Screens/RegistrationScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialState = {\n  login: \"\",\n  email: \"\",\n  password: \"\"\n};\nexport default function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isShowKeyboard = _useState4[0],\n    setIsShowKeyboard = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isReady = _useState6[0],\n    setIsReady = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isInputOnFocus = _useState8[0],\n    setIsInputOnFocus = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isPasswordHidden = _useState10[0],\n    setIsPasswordHidden = _useState10[1];\n  var keyboardHide = function keyboardHide() {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n  };\n  var togglePasswordHide = function togglePasswordHide() {\n    setIsPasswordHidden(isPasswordHidden === true ? false : true);\n  };\n  if (!isReady) {\n    return _jsx(AppLoading, {});\n  }\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: keyboardHide,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(ImageBackground, {\n        source: require(\"./assets/photo-bg.jpg\"),\n        style: styles.imgBG,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n          style: styles.KAVWrapper,\n          children: _jsxs(View, {\n            style: _objectSpread(_objectSpread({}, styles.formWrapper), {}, {\n              marginBottom: isShowKeyboard ? -175 : 0\n            }),\n            children: [_jsxs(View, {\n              style: styles.avatar,\n              children: [_jsx(Image, {}), _jsx(TouchableOpacity, {\n                style: styles.addAvatarBtn,\n                activeOpacity: 0.7\n              })]\n            }), _jsx(View, {\n              style: styles.titleWrapper,\n              children: _jsx(Text, {\n                style: styles.title,\n                children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n              })\n            }), _jsx(View, {\n              style: styles.inpupWrapperLoginEmail,\n              children: _jsx(TextInput, {\n                style: _objectSpread(_objectSpread({}, styles.inputLoginEmail), {}, {\n                  borderColor: isInputOnFocus === \"login\" ? \"#FF6C00\" : \"#E8E8E8\"\n                }),\n                placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: state.login,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      login: value\n                    });\n                  });\n                },\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                  setIsInputOnFocus(\"login\");\n                },\n                onBlur: function onBlur() {\n                  setIsInputOnFocus(false);\n                }\n              })\n            }), _jsx(View, {\n              style: styles.inpupWrapperLoginEmail,\n              children: _jsx(TextInput, {\n                style: _objectSpread(_objectSpread({}, styles.inputLoginEmail), {}, {\n                  borderColor: isInputOnFocus === \"email\" ? \"#FF6C00\" : \"#E8E8E8\"\n                }),\n                placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: state.email,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      email: value\n                    });\n                  });\n                },\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                  setIsInputOnFocus(\"email\");\n                },\n                onBlur: function onBlur() {\n                  setIsInputOnFocus(false);\n                }\n              })\n            }), _jsxs(View, {\n              style: styles.inpupWrapperPassword,\n              children: [_jsx(TextInput, {\n                style: _objectSpread(_objectSpread({}, styles.inputPassword), {}, {\n                  borderColor: isInputOnFocus === \"password\" ? \"#FF6C00\" : \"#E8E8E8\"\n                }),\n                placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: state.password,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      password: value\n                    });\n                  });\n                },\n                secureTextEntry: isPasswordHidden ? true : false,\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                  setIsInputOnFocus(\"password\");\n                },\n                onBlur: function onBlur() {\n                  setIsInputOnFocus(false);\n                }\n              }), _jsx(TouchableOpacity, {\n                style: styles.btnToglePassword,\n                activeOpacity: 0.7,\n                onPress: function onPress() {\n                  return togglePasswordHide();\n                },\n                children: _jsx(Text, {\n                  style: styles.toglePasswordText,\n                  children: isPasswordHidden ? \"Показать\" : \"Скрыть\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: styles.btn,\n              activeOpacity: 0.7,\n              onPress: function onPress() {\n                return keyboardHide();\n              },\n              children: _jsx(Text, {\n                style: styles.btnName,\n                children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.link,\n              activeOpacity: 0.7,\n              onPress: function onPress() {\n                return keyboardHide();\n              },\n              children: _jsx(Text, {\n                style: styles.linkName,\n                children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0412\\u043E\\u0439\\u0442\\u0438\"\n              })\n            })]\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  imgBG: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  KAVWrapper: {\n    justifyContent: \"flex-end\"\n  },\n  formWrapper: {\n    paddingHorizontal: 16,\n    paddingTop: 92,\n    paddingBottom: 78,\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    backgroundColor: \"#fff\"\n  },\n  avatar: {\n    height: 120,\n    width: 120,\n    position: \"absolute\",\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 16,\n    alignSelf: \"center\",\n    top: -60\n  },\n  addAvatarBtn: {\n    position: \"absolute\",\n    right: -12,\n    bottom: 14,\n    height: 25,\n    width: 25,\n    borderWidth: 1,\n    borderRadius: 13,\n    borderColor: \"#FF6C00\",\n    backgroundColor: \"#fff\"\n  },\n  titleWrapper: {\n    alignItems: \"center\",\n    marginBottom: 32\n  },\n  title: {\n    color: \"#212121\",\n    fontSize: 30,\n    letterSpacing: 0.01,\n    fontWeight: \"500\"\n  },\n  inpupWrapperLoginEmail: {\n    marginBottom: 16\n  },\n  inputLoginEmail: {\n    borderWidth: 1,\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    color: \"#212121\",\n    height: 50,\n    paddingHorizontal: 16\n  },\n  inpupWrapperPassword: {\n    marginBottom: 43\n  },\n  inputPassword: {\n    borderWidth: 1,\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    color: \"#212121\",\n    height: 50,\n    paddingHorizontal: 16\n  },\n  btn: {\n    backgroundColor: \"#FF6C00\",\n    height: 51,\n    borderRadius: 100,\n    paddingVertical: 16\n  },\n  btnName: {\n    fontSize: 16,\n    color: \"#ffffff\",\n    textAlign: \"center\"\n  },\n  btnToglePassword: {\n    position: \"absolute\",\n    bottom: 15,\n    right: 16\n  },\n  toglePasswordText: {\n    fontSize: 16,\n    color: \"#1B4371\"\n  },\n  link: {\n    marginTop: 16\n  },\n  linkName: {\n    fontSize: 16,\n    color: \"#1B4371\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","Font","SplashScreen","loadFonts","loadAsync","require","RegistrationScreen","initialState","login","email","password","App","state","setState","isShowKeyboard","setIsShowKeyboard","isReady","setIsReady","isInputOnFocus","setIsInputOnFocus","isPasswordHidden","setIsPasswordHidden","keyboardHide","Keyboard","dismiss","togglePasswordHide","styles","container","imgBG","Platform","OS","KAVWrapper","formWrapper","marginBottom","avatar","addAvatarBtn","titleWrapper","title","inpupWrapperLoginEmail","inputLoginEmail","borderColor","value","prevState","inpupWrapperPassword","inputPassword","btnToglePassword","toglePasswordText","btn","btnName","link","linkName","StyleSheet","create","flex","backgroundColor","resizeMode","justifyContent","paddingHorizontal","paddingTop","paddingBottom","borderTopLeftRadius","borderTopRightRadius","height","width","position","borderRadius","alignSelf","top","right","bottom","borderWidth","alignItems","color","fontSize","letterSpacing","fontWeight","paddingVertical","textAlign","marginTop"],"sources":["F:/it/react-native-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  ImageBackground,\n  Image,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Platform,\n  KeyboardAvoidingView,\n  Keyboard,\n} from \"react-native\";\n\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\n\nconst loadFonts = async () => {\n  await Font.loadAsync({\n    \"Roboto-Regulat\": require(\"./assets/fonts/Roboto/Roboto-Regular.ttf\"),\n    \"Roboto-Medium\": require(\"./assets/fonts/Roboto/Roboto-Medium.ttf\"),\n  });\n};\n\nimport RegistrationScreen from \"./Screens/RegistrationScreen\";\n\nconst initialState = {\n  login: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nexport default function App() {\n  const [state, setState] = useState(\"\");\n  const [isShowKeyboard, setIsShowKeyboard] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n\n  const [isInputOnFocus, setIsInputOnFocus] = useState(false);\n  const [isPasswordHidden, setIsPasswordHidden] = useState(true);\n\n  // const [platform, setPlatform] = useState(\"\");\n\n  // зробити ще одну ф-ю для сабміту, щоб не скидало форму при TouchableWithoutFeedback\n  const keyboardHide = () => {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n    // setState(initialState);\n  };\n\n  const togglePasswordHide = () => {\n    setIsPasswordHidden(isPasswordHidden === true ? false : true);\n  };\n\n  if (!isReady) {\n    return <AppLoading />;\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={keyboardHide}>\n      <View style={styles.container}>\n        <StatusBar style=\"auto\" />\n        <ImageBackground\n          source={require(\"./assets/photo-bg.jpg\")}\n          style={styles.imgBG}\n        >\n          <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n            style={styles.KAVWrapper}\n          >\n            {/* <RegistrationScreen></RegistrationScreen> */}\n\n            <View\n              style={{\n                ...styles.formWrapper,\n                marginBottom: isShowKeyboard ? -175 : 0,\n              }}\n            >\n              <View style={styles.avatar}>\n                <Image />\n                <TouchableOpacity\n                  style={styles.addAvatarBtn}\n                  activeOpacity={0.7}\n                  // onPress={() => keyboardHide()}\n                ></TouchableOpacity>\n              </View>\n              <View style={styles.titleWrapper}>\n                <Text style={styles.title}>Регистрация</Text>\n              </View>\n              <View style={styles.inpupWrapperLoginEmail}>\n                <TextInput\n                  style={{\n                    ...styles.inputLoginEmail,\n                    borderColor:\n                      isInputOnFocus === \"login\" ? \"#FF6C00\" : \"#E8E8E8\",\n                  }}\n                  placeholder=\"Логин\"\n                  placeholderTextColor=\"#BDBDBD\"\n                  value={state.login}\n                  onChangeText={(value) =>\n                    setState((prevState) => ({ ...prevState, login: value }))\n                  }\n                  onFocus={() => {\n                    setIsShowKeyboard(true);\n                    setIsInputOnFocus(\"login\");\n                  }}\n                  onBlur={() => {\n                    setIsInputOnFocus(false);\n                  }}\n                />\n              </View>\n              <View style={styles.inpupWrapperLoginEmail}>\n                <TextInput\n                  style={{\n                    ...styles.inputLoginEmail,\n                    borderColor:\n                      isInputOnFocus === \"email\" ? \"#FF6C00\" : \"#E8E8E8\",\n                  }}\n                  placeholder=\"Адрес электронной почты\"\n                  placeholderTextColor=\"#BDBDBD\"\n                  value={state.email}\n                  onChangeText={(value) =>\n                    setState((prevState) => ({ ...prevState, email: value }))\n                  }\n                  onFocus={() => {\n                    setIsShowKeyboard(true);\n                    setIsInputOnFocus(\"email\");\n                  }}\n                  onBlur={() => {\n                    setIsInputOnFocus(false);\n                  }}\n                />\n              </View>\n              <View style={styles.inpupWrapperPassword}>\n                <TextInput\n                  style={{\n                    ...styles.inputPassword,\n                    borderColor:\n                      isInputOnFocus === \"password\" ? \"#FF6C00\" : \"#E8E8E8\",\n                  }}\n                  placeholder=\"Пароль\"\n                  placeholderTextColor=\"#BDBDBD\"\n                  value={state.password}\n                  onChangeText={(value) =>\n                    setState((prevState) => ({ ...prevState, password: value }))\n                  }\n                  secureTextEntry={isPasswordHidden ? true : false}\n                  onFocus={() => {\n                    setIsShowKeyboard(true);\n                    setIsInputOnFocus(\"password\");\n                  }}\n                  onBlur={() => {\n                    setIsInputOnFocus(false);\n                  }}\n                />\n                <TouchableOpacity\n                  style={styles.btnToglePassword}\n                  activeOpacity={0.7}\n                  onPress={() => togglePasswordHide()}\n                >\n                  <Text style={styles.toglePasswordText}>\n                    {isPasswordHidden ? \"Показать\" : \"Скрыть\"}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <TouchableOpacity\n                style={styles.btn}\n                activeOpacity={0.7}\n                onPress={() => keyboardHide()}\n              >\n                <Text style={styles.btnName}>Зарегистрироваться</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.link}\n                activeOpacity={0.7}\n                onPress={() => keyboardHide()}\n              >\n                <Text style={styles.linkName}>Уже есть аккаунт? Войти</Text>\n              </TouchableOpacity>\n            </View>\n          </KeyboardAvoidingView>\n        </ImageBackground>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    // alignItems: \"center\",\n    // justifyContent: \"center\",\n  },\n\n  imgBG: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n    // alignItems: \"center\",\n  },\n\n  KAVWrapper: {\n    // flex: 1,\n    justifyContent: \"flex-end\",\n  },\n\n  formWrapper: {\n    // height: 550,\n    paddingHorizontal: 16,\n    paddingTop: 92,\n    paddingBottom: 78,\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    backgroundColor: \"#fff\",\n  },\n\n  avatar: {\n    height: 120,\n    width: 120,\n    position: \"absolute\",\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 16,\n    alignSelf: \"center\",\n    top: -60,\n  },\n\n  addAvatarBtn: {\n    position: \"absolute\",\n    right: -12,\n    bottom: 14,\n    height: 25,\n    width: 25,\n    borderWidth: 1,\n    borderRadius: 13,\n    borderColor: \"#FF6C00\",\n    backgroundColor: \"#fff\",\n  },\n\n  titleWrapper: {\n    alignItems: \"center\",\n    marginBottom: 32,\n  },\n\n  title: {\n    // marginTop: 92,\n    color: `#212121`,\n    fontSize: 30,\n    letterSpacing: 0.01,\n    fontWeight: \"500\",\n\n    // fontWeight: 500,\n    // lineHeight: 35,\n    // font-family: 'Roboto';\n    // font-style: normal;\n  },\n\n  inpupWrapperLoginEmail: {\n    marginBottom: 16,\n  },\n\n  inputLoginEmail: {\n    borderWidth: 1,\n    // borderColor: \"#E8E8E8\",\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    color: \"#212121\",\n    height: 50,\n    paddingHorizontal: 16,\n    // placeholderTextColor: \"#BDBDBD\",\n  },\n\n  inpupWrapperPassword: {\n    marginBottom: 43,\n  },\n\n  inputPassword: {\n    borderWidth: 1,\n    // borderColor: \"#E8E8E8\",\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    color: \"#212121\",\n    height: 50,\n    paddingHorizontal: 16,\n  },\n\n  btn: {\n    backgroundColor: \"#FF6C00\",\n    height: 51,\n    borderRadius: 100,\n    paddingVertical: 16,\n  },\n\n  btnName: {\n    fontSize: 16,\n    color: \"#ffffff\",\n    textAlign: \"center\",\n  },\n\n  btnToglePassword: {\n    position: \"absolute\",\n    bottom: 15,\n    right: 16,\n  },\n\n  toglePasswordText: {\n    fontSize: 16,\n    color: \"#1B4371\",\n  },\n\n  link: {\n    marginTop: 16,\n  },\n\n  linkName: {\n    fontSize: 16,\n    color: \"#1B4371\",\n    textAlign: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}