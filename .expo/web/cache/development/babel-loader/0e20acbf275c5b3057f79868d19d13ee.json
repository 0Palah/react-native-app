{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    loginValue = _useState2[0],\n    setLoginValue = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    emailValue = _useState4[0],\n    setEmailValue = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwordValue = _useState6[0],\n    setPasswordValue = _useState6[1];\n  var inputHandlerLogin = function inputHandlerLogin(text) {\n    return setLoginValue(text);\n  };\n  var inputHandlerEmail = function inputHandlerEmail(text) {\n    return setEmailValue(text);\n  };\n  var inputHandlerPassword = function inputHandlerPassword(text) {\n    return setPasswordValue(text);\n  };\n  console.log(Platform.OS);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(ImageBackground, {\n      source: require(\"./assets/photo-bg.jpg\"),\n      style: styles.imgBG,\n      children: _jsx(KeyboardAvoidingView, {\n        behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n        children: _jsx(View, {\n          children: _jsxs(View, {\n            style: styles.formWrapper,\n            children: [_jsx(View, {\n              style: styles.titleWrapper,\n              children: _jsx(Text, {\n                style: styles.title,\n                children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n              })\n            }), _jsx(View, {\n              style: styles.inpupWrapperLoginEmail,\n              children: _jsx(TextInput, {\n                style: styles.inputLoginEmail,\n                placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: loginValue,\n                onChangeText: inputHandlerLogin\n              })\n            }), _jsx(View, {\n              style: styles.inpupWrapperLoginEmail,\n              children: _jsx(TextInput, {\n                style: styles.inputLoginEmail,\n                placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: emailValue,\n                onChangeText: inputHandlerEmail\n              })\n            }), _jsx(View, {\n              style: styles.inpupWrapperPassword,\n              children: _jsx(TextInput, {\n                style: styles.inputPassword,\n                placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: passwordValue,\n                onChangeText: inputHandlerPassword,\n                secureTextEntry: true\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.btn,\n              activeOpacity: 0.7,\n              children: _jsx(Text, {\n                style: styles.btnName,\n                children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.link,\n              activeOpacity: 0.7,\n              children: _jsx(Text, {\n                style: styles.linkName,\n                children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0412\\u043E\\u0439\\u0442\\u0438\"\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  imgBG: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  formWrapper: {\n    paddingHorizontal: 16,\n    paddingTop: 92,\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    backgroundColor: \"#fff\"\n  },\n  titleWrapper: {\n    alignItems: \"center\",\n    marginBottom: 32\n  },\n  title: {\n    color: \"#212121\",\n    fontSize: 30,\n    letterSpacing: 0.01\n  },\n  inpupWrapperLoginEmail: {\n    marginBottom: 16\n  },\n  inputLoginEmail: {\n    borderWidth: 1,\n    borderColor: \"#E8E8E8\",\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    height: 50,\n    paddingHorizontal: 16\n  },\n  inpupWrapperPassword: {\n    marginBottom: 43\n  },\n  inputPassword: {\n    borderWidth: 1,\n    borderColor: \"#E8E8E8\",\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    height: 50,\n    paddingHorizontal: 16\n  },\n  btn: {\n    backgroundColor: \"#FF6C00\",\n    height: 51,\n    borderRadius: 100,\n    paddingVertical: 16,\n    marginBottom: 16\n  },\n  btnName: {\n    fontSize: 16,\n    color: \"#ffffff\",\n    textAlign: \"center\"\n  },\n  link: {},\n  linkName: {\n    fontSize: 16,\n    color: \"#1B4371\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","App","loginValue","setLoginValue","emailValue","setEmailValue","passwordValue","setPasswordValue","inputHandlerLogin","text","inputHandlerEmail","inputHandlerPassword","console","log","Platform","OS","styles","container","require","imgBG","formWrapper","titleWrapper","title","inpupWrapperLoginEmail","inputLoginEmail","inpupWrapperPassword","inputPassword","btn","btnName","link","linkName","StyleSheet","create","flex","backgroundColor","resizeMode","justifyContent","paddingHorizontal","paddingTop","borderTopLeftRadius","borderTopRightRadius","alignItems","marginBottom","color","fontSize","letterSpacing","borderWidth","borderColor","borderRadius","height","paddingVertical","textAlign"],"sources":["F:/it/react-native-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  ImageBackground,\n  TouchableOpacity,\n  Platform,\n  KeyboardAvoidingView,\n} from \"react-native\";\n\nexport default function App() {\n  const [loginValue, setLoginValue] = useState(\"\");\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  // const [platform, setPlatform] = useState(\"\");\n\n  const inputHandlerLogin = (text) => setLoginValue(text);\n  const inputHandlerEmail = (text) => setEmailValue(text);\n  const inputHandlerPassword = (text) => setPasswordValue(text);\n  console.log(Platform.OS);\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <ImageBackground\n        source={require(\"./assets/photo-bg.jpg\")}\n        style={styles.imgBG}\n      >\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        >\n          <View>\n            <View style={styles.formWrapper}>\n              <View style={styles.titleWrapper}>\n                <Text style={styles.title}>Регистрация</Text>\n              </View>\n              <View style={styles.inpupWrapperLoginEmail}>\n                <TextInput\n                  style={styles.inputLoginEmail}\n                  placeholder=\"Логин\"\n                  placeholderTextColor=\"#BDBDBD\"\n                  value={loginValue}\n                  onChangeText={inputHandlerLogin}\n                />\n              </View>\n              <View style={styles.inpupWrapperLoginEmail}>\n                <TextInput\n                  style={styles.inputLoginEmail}\n                  placeholder=\"Адрес электронной почты\"\n                  placeholderTextColor=\"#BDBDBD\"\n                  value={emailValue}\n                  onChangeText={inputHandlerEmail}\n                />\n              </View>\n              <View style={styles.inpupWrapperPassword}>\n                <TextInput\n                  style={styles.inputPassword}\n                  placeholder=\"Пароль\"\n                  placeholderTextColor=\"#BDBDBD\"\n                  value={passwordValue}\n                  onChangeText={inputHandlerPassword}\n                  secureTextEntry={true}\n                />\n              </View>\n              <TouchableOpacity\n                style={styles.btn}\n                activeOpacity={0.7}\n                // onPress={onPress}\n              >\n                <Text style={styles.btnName}>Зарегистрироваться</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.link}\n                activeOpacity={0.7}\n                // onPress={onPress}\n              >\n                <Text style={styles.linkName}>Уже есть аккаунт? Войти</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </KeyboardAvoidingView>\n      </ImageBackground>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    // alignItems: \"center\",\n    // justifyContent: \"center\",\n  },\n\n  imgBG: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n    // alignItems: \"center\",\n  },\n\n  formWrapper: {\n    // height: 550,\n    paddingHorizontal: 16,\n    paddingTop: 92,\n    // paddingBottom: 78,\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    backgroundColor: \"#fff\",\n  },\n\n  titleWrapper: {\n    alignItems: \"center\",\n    marginBottom: 32,\n  },\n\n  title: {\n    // marginTop: 92,\n    color: `#212121`,\n    fontSize: 30,\n    letterSpacing: 0.01,\n    // fontWeight: 500,\n    // lineHeight: 35,\n    // font-family: 'Roboto';\n    // font-style: normal;\n  },\n\n  inpupWrapperLoginEmail: {\n    marginBottom: 16,\n  },\n\n  inputLoginEmail: {\n    borderWidth: 1,\n    borderColor: \"#E8E8E8\",\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    height: 50,\n    paddingHorizontal: 16,\n    // placeholderTextColor: \"#BDBDBD\",\n  },\n\n  inpupWrapperPassword: {\n    marginBottom: 43,\n  },\n\n  inputPassword: {\n    borderWidth: 1,\n    borderColor: \"#E8E8E8\",\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    height: 50,\n    paddingHorizontal: 16,\n  },\n\n  btn: {\n    backgroundColor: \"#FF6C00\",\n    height: 51,\n    borderRadius: 100,\n    paddingVertical: 16,\n    marginBottom: 16,\n  },\n\n  btnName: {\n    fontSize: 16,\n    color: \"#ffffff\",\n    textAlign: \"center\",\n  },\n\n  link: {\n    // marginBottom: 16,\n    // backgroundColor: \"#FF6C00\",\n    // height: 51,\n    // borderRadius: 100,\n    // paddingVertical: 16,\n  },\n\n  linkName: {\n    fontSize: 16,\n    color: \"#1B4371\",\n    textAlign: \"center\",\n  },\n\n  // варіанти по заданню різних платформ\n  // test: {\n  //   backgroundColor: Platform.OS === \"ios\" ? \"red\" : \"green\", // варіант  через тернарник\n\n  //   // Варіант через select який повертає обєкт\n  //   ...Platform.select({\n  //     ios: {\n  //       backgroundColor: \"red\",\n  //     },\n  //     android: {\n  //       backgroundColor: \"green\",\n  //     },\n  //     default: {\n  //       // other platforms, web for example\n  //       backgroundColor: \"blue\",\n  //     },\n  //   }),\n  // },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}