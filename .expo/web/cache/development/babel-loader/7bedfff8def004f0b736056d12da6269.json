{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Svg, { Path } from \"react-native-svg\";\nimport SvgCross from \"../assets/cross.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialState = {\n  login: \"\",\n  email: \"\",\n  password: \"\"\n};\nexport default function RegistrationScreen() {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isShowKeyboard = _useState4[0],\n    setIsShowKeyboard = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isInputOnFocus = _useState6[0],\n    setIsInputOnFocus = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isPasswordHidden = _useState8[0],\n    setIsPasswordHidden = _useState8[1];\n  var keyboardHide = function keyboardHide() {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n  };\n  var togglePasswordHide = function togglePasswordHide() {\n    setIsPasswordHidden(isPasswordHidden === true ? false : true);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: keyboardHide,\n    children: _jsxs(View, {\n      style: styles.container,\n      onLayout: onLayoutRootView,\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(ImageBackground, {\n        source: require(\"./assets/photo-bg.jpg\"),\n        style: styles.imgBG,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n          style: styles.KAVWrapper,\n          children: _jsxs(View, {\n            style: _objectSpread(_objectSpread({}, styles.formWrapper), {}, {\n              marginBottom: isShowKeyboard ? -175 : 0\n            }),\n            children: [_jsxs(View, {\n              style: styles.avatarWrapper,\n              children: [_jsx(View, {\n                style: styles.fotoWrapper,\n                children: _jsx(Image, {\n                  source: require(\"./assets/avatarExample.jpg\")\n                })\n              }), _jsx(Pressable, {\n                onPress: function onPress() {\n                  console.log(123);\n                },\n                style: styles.addAvatarBtn,\n                children: _jsx(Svg, {\n                  width: \"13\",\n                  height: \"13\",\n                  viewBox: \"0 0 32 32\",\n                  style: {\n                    transform: [{\n                      rotate: \"45deg\"\n                    }],\n                    color: \"#ff6c00\"\n                  },\n                  children: _jsx(Path, {\n                    fill: \"currentColor\",\n                    d: \"M17.231 0h-2.462v14.769h-14.769v2.462h14.769v14.769h2.462v-14.769h14.769v-2.462h-14.769v-14.769z\"\n                  })\n                })\n              })]\n            }), _jsx(View, {\n              style: styles.titleWrapper,\n              children: _jsx(Text, {\n                style: styles.title,\n                children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n              })\n            }), _jsx(View, {\n              style: styles.inpupWrapperLoginEmail,\n              children: _jsx(TextInput, {\n                style: _objectSpread(_objectSpread({}, styles.inputLoginEmail), {}, {\n                  borderColor: isInputOnFocus === \"login\" ? \"#FF6C00\" : \"#E8E8E8\"\n                }),\n                placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: state.login,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      login: value\n                    });\n                  });\n                },\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                  setIsInputOnFocus(\"login\");\n                },\n                onBlur: function onBlur() {\n                  setIsInputOnFocus(false);\n                }\n              })\n            }), _jsx(View, {\n              style: styles.inpupWrapperLoginEmail,\n              children: _jsx(TextInput, {\n                style: _objectSpread(_objectSpread({}, styles.inputLoginEmail), {}, {\n                  borderColor: isInputOnFocus === \"email\" ? \"#FF6C00\" : \"#E8E8E8\"\n                }),\n                placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: state.email,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      email: value\n                    });\n                  });\n                },\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                  setIsInputOnFocus(\"email\");\n                },\n                onBlur: function onBlur() {\n                  setIsInputOnFocus(false);\n                }\n              })\n            }), _jsxs(View, {\n              style: styles.inpupWrapperPassword,\n              children: [_jsx(TextInput, {\n                style: _objectSpread(_objectSpread({}, styles.inputPassword), {}, {\n                  borderColor: isInputOnFocus === \"password\" ? \"#FF6C00\" : \"#E8E8E8\"\n                }),\n                placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n                placeholderTextColor: \"#BDBDBD\",\n                value: state.password,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      password: value\n                    });\n                  });\n                },\n                secureTextEntry: isPasswordHidden ? true : false,\n                onFocus: function onFocus() {\n                  setIsShowKeyboard(true);\n                  setIsInputOnFocus(\"password\");\n                },\n                onBlur: function onBlur() {\n                  setIsInputOnFocus(false);\n                }\n              }), _jsx(TouchableOpacity, {\n                style: styles.btnToglePassword,\n                activeOpacity: 0.7,\n                onPress: function onPress() {\n                  return togglePasswordHide();\n                },\n                children: _jsx(Text, {\n                  style: styles.toglePasswordText,\n                  children: isPasswordHidden ? \"Показать\" : \"Скрыть\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: styles.btn,\n              activeOpacity: 0.7,\n              onPress: function onPress() {\n                return keyboardHide();\n              },\n              children: _jsx(Text, {\n                style: styles.btnName,\n                children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.link,\n              activeOpacity: 0.7,\n              onPress: function onPress() {\n                return keyboardHide();\n              },\n              children: _jsx(Text, {\n                style: styles.linkName,\n                children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0412\\u043E\\u0439\\u0442\\u0438\"\n              })\n            })]\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  imgBG: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  KAVWrapper: {\n    justifyContent: \"flex-end\"\n  },\n  formWrapper: {\n    paddingHorizontal: 16,\n    paddingTop: 92,\n    paddingBottom: 78,\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    backgroundColor: \"#fff\"\n  },\n  avatarWrapper: {\n    height: 120,\n    width: 120,\n    position: \"absolute\",\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 16,\n    alignSelf: \"center\",\n    top: -60\n  },\n  fotoWrapper: {\n    overflow: \"hidden\",\n    borderRadius: 16\n  },\n  addAvatarBtn: {\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    right: -12,\n    bottom: 14,\n    height: 25,\n    width: 25,\n    borderWidth: 1,\n    borderRadius: 13,\n    borderColor: \"#FF6C00\",\n    backgroundColor: \"#fff\"\n  },\n  titleWrapper: {\n    alignItems: \"center\",\n    marginBottom: 32\n  },\n  title: {\n    color: \"#212121\",\n    fontSize: 30,\n    letterSpacing: 0.01,\n    fontWeight: \"500\",\n    fontFamily: \"Roboto-Medium\"\n  },\n  inpupWrapperLoginEmail: {\n    marginBottom: 16\n  },\n  inputLoginEmail: {\n    borderWidth: 1,\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    color: \"#212121\",\n    height: 50,\n    paddingHorizontal: 16,\n    fontFamily: \"Roboto-Regular\"\n  },\n  inpupWrapperPassword: {\n    marginBottom: 43\n  },\n  inputPassword: {\n    borderWidth: 1,\n    borderRadius: 8,\n    backgroundColor: \"#F6F6F6\",\n    color: \"#212121\",\n    height: 50,\n    paddingHorizontal: 16,\n    fontFamily: \"Roboto-Regular\"\n  },\n  btn: {\n    backgroundColor: \"#FF6C00\",\n    height: 51,\n    borderRadius: 100,\n    paddingVertical: 16\n  },\n  btnName: {\n    fontSize: 16,\n    color: \"#ffffff\",\n    textAlign: \"center\",\n    fontFamily: \"Roboto-Regular\"\n  },\n  btnToglePassword: {\n    position: \"absolute\",\n    bottom: 15,\n    right: 16\n  },\n  toglePasswordText: {\n    fontSize: 16,\n    color: \"#1B4371\",\n    fontFamily: \"Roboto-Regular\"\n  },\n  link: {\n    marginTop: 16\n  },\n  linkName: {\n    fontSize: 16,\n    color: \"#1B4371\",\n    textAlign: \"center\",\n    fontFamily: \"Roboto-Regular\"\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","useCallback","Svg","Path","SvgCross","initialState","login","email","password","RegistrationScreen","state","setState","isShowKeyboard","setIsShowKeyboard","isInputOnFocus","setIsInputOnFocus","isPasswordHidden","setIsPasswordHidden","keyboardHide","Keyboard","dismiss","togglePasswordHide","styles","container","onLayoutRootView","require","imgBG","Platform","OS","KAVWrapper","formWrapper","marginBottom","avatarWrapper","fotoWrapper","console","log","addAvatarBtn","transform","rotate","color","titleWrapper","title","inpupWrapperLoginEmail","inputLoginEmail","borderColor","value","prevState","inpupWrapperPassword","inputPassword","btnToglePassword","toglePasswordText","btn","btnName","link","linkName","StyleSheet","create","flex","backgroundColor","resizeMode","justifyContent","paddingHorizontal","paddingTop","paddingBottom","borderTopLeftRadius","borderTopRightRadius","height","width","position","borderRadius","alignSelf","top","overflow","alignItems","right","bottom","borderWidth","fontSize","letterSpacing","fontWeight","fontFamily","paddingVertical","textAlign","marginTop"],"sources":["F:/it/react-native-app/Screens/RegistrationScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  ImageBackground,\r\n  Image,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Platform,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  Pressable,\r\n} from \"react-native\";\r\n\r\n// import * as Font from \"expo-font\";\r\n// import * as SplashScreen from \"expo-splash-screen\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport SvgCross from \"../assets/cross.svg\";\r\n\r\nconst initialState = {\r\n  login: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport default function RegistrationScreen() {\r\n  const [state, setState] = useState(initialState);\r\n  const [isShowKeyboard, setIsShowKeyboard] = useState(false);\r\n  //   const [appIsReady, setAppIsReady] = useState(false);\r\n\r\n  const [isInputOnFocus, setIsInputOnFocus] = useState(false);\r\n  const [isPasswordHidden, setIsPasswordHidden] = useState(true);\r\n\r\n  // const [platform, setPlatform] = useState(\"\");\r\n\r\n  //   useEffect(() => {\r\n  //     async function prepare() {\r\n  //       try {\r\n  //         await Font.loadAsync({\r\n  //           \"Roboto-Regular\": require(\"./assets/fonts/Roboto/Roboto-Regular.ttf\"),\r\n  //           \"Roboto-Medium\": require(\"./assets/fonts/Roboto/Roboto-Medium.ttf\"),\r\n  //         });\r\n  //       } catch (e) {\r\n  //         console.warn(e);\r\n  //       } finally {\r\n  //         setAppIsReady(true);\r\n  //       }\r\n  //     }\r\n  //     prepare();\r\n  //   }, []);\r\n\r\n  // зробити ще одну ф-ю для сабміту, щоб не скидало форму при TouchableWithoutFeedback\r\n  const keyboardHide = () => {\r\n    setIsShowKeyboard(false);\r\n    Keyboard.dismiss();\r\n    // setState(initialState);\r\n  };\r\n\r\n  const togglePasswordHide = () => {\r\n    setIsPasswordHidden(isPasswordHidden === true ? false : true);\r\n  };\r\n\r\n  //   const onLayoutRootView = useCallback(async () => {\r\n  //     if (appIsReady) {\r\n  //       await SplashScreen.hideAsync();\r\n  //     }\r\n  //   }, [appIsReady]);\r\n\r\n  //   if (!appIsReady) {\r\n  //     return null;\r\n  //   }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={keyboardHide}>\r\n      <View style={styles.container} onLayout={onLayoutRootView}>\r\n        <StatusBar style=\"auto\" />\r\n        <ImageBackground\r\n          source={require(\"./assets/photo-bg.jpg\")}\r\n          style={styles.imgBG}\r\n        >\r\n          <KeyboardAvoidingView\r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n            style={styles.KAVWrapper}\r\n          >\r\n            {/* <RegistrationScreen></RegistrationScreen> */}\r\n\r\n            <View\r\n              style={{\r\n                ...styles.formWrapper,\r\n                marginBottom: isShowKeyboard ? -175 : 0,\r\n              }}\r\n            >\r\n              <View style={styles.avatarWrapper}>\r\n                <View style={styles.fotoWrapper}>\r\n                  <Image\r\n                    source={require(\"./assets/avatarExample.jpg\")}\r\n                    // objectFit=\"contain\"\r\n                  />\r\n                </View>\r\n\r\n                <Pressable\r\n                  onPress={() => {\r\n                    console.log(123);\r\n                  }}\r\n                  style={styles.addAvatarBtn}\r\n                  // activeOpacity={0.7}\r\n                  // onPress={() => keyboardHide()}\r\n                >\r\n                  <Svg\r\n                    width=\"13\"\r\n                    height=\"13\"\r\n                    viewBox=\"0 0 32 32\"\r\n                    style={{\r\n                      transform: [{ rotate: \"45deg\" }],\r\n                      color: \"#ff6c00\",\r\n                    }}\r\n                  >\r\n                    <Path\r\n                      fill=\"currentColor\"\r\n                      d=\"M17.231 0h-2.462v14.769h-14.769v2.462h14.769v14.769h2.462v-14.769h14.769v-2.462h-14.769v-14.769z\"\r\n                    />\r\n                  </Svg>\r\n                  {/* <SvgCross\r\n                      width=\"13\"\r\n                      height=\"13\"\r\n                      // fill={\"red\"}\r\n                      // style={{ transform: [{ rotate: \"45deg\" }] }}\r\n                    /> */}\r\n                </Pressable>\r\n              </View>\r\n              <View style={styles.titleWrapper}>\r\n                <Text style={styles.title}>Регистрация</Text>\r\n              </View>\r\n              <View style={styles.inpupWrapperLoginEmail}>\r\n                <TextInput\r\n                  style={{\r\n                    ...styles.inputLoginEmail,\r\n                    borderColor:\r\n                      isInputOnFocus === \"login\" ? \"#FF6C00\" : \"#E8E8E8\",\r\n                  }}\r\n                  placeholder=\"Логин\"\r\n                  placeholderTextColor=\"#BDBDBD\"\r\n                  value={state.login}\r\n                  onChangeText={(value) =>\r\n                    setState((prevState) => ({ ...prevState, login: value }))\r\n                  }\r\n                  onFocus={() => {\r\n                    setIsShowKeyboard(true);\r\n                    setIsInputOnFocus(\"login\");\r\n                  }}\r\n                  onBlur={() => {\r\n                    setIsInputOnFocus(false);\r\n                  }}\r\n                />\r\n              </View>\r\n              <View style={styles.inpupWrapperLoginEmail}>\r\n                <TextInput\r\n                  style={{\r\n                    ...styles.inputLoginEmail,\r\n                    borderColor:\r\n                      isInputOnFocus === \"email\" ? \"#FF6C00\" : \"#E8E8E8\",\r\n                  }}\r\n                  placeholder=\"Адрес электронной почты\"\r\n                  placeholderTextColor=\"#BDBDBD\"\r\n                  value={state.email}\r\n                  onChangeText={(value) =>\r\n                    setState((prevState) => ({ ...prevState, email: value }))\r\n                  }\r\n                  onFocus={() => {\r\n                    setIsShowKeyboard(true);\r\n                    setIsInputOnFocus(\"email\");\r\n                  }}\r\n                  onBlur={() => {\r\n                    setIsInputOnFocus(false);\r\n                  }}\r\n                />\r\n              </View>\r\n              <View style={styles.inpupWrapperPassword}>\r\n                <TextInput\r\n                  style={{\r\n                    ...styles.inputPassword,\r\n                    borderColor:\r\n                      isInputOnFocus === \"password\" ? \"#FF6C00\" : \"#E8E8E8\",\r\n                  }}\r\n                  placeholder=\"Пароль\"\r\n                  placeholderTextColor=\"#BDBDBD\"\r\n                  value={state.password}\r\n                  onChangeText={(value) =>\r\n                    setState((prevState) => ({ ...prevState, password: value }))\r\n                  }\r\n                  secureTextEntry={isPasswordHidden ? true : false}\r\n                  onFocus={() => {\r\n                    setIsShowKeyboard(true);\r\n                    setIsInputOnFocus(\"password\");\r\n                  }}\r\n                  onBlur={() => {\r\n                    setIsInputOnFocus(false);\r\n                  }}\r\n                />\r\n                <TouchableOpacity\r\n                  style={styles.btnToglePassword}\r\n                  activeOpacity={0.7}\r\n                  onPress={() => togglePasswordHide()}\r\n                >\r\n                  <Text style={styles.toglePasswordText}>\r\n                    {isPasswordHidden ? \"Показать\" : \"Скрыть\"}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n              <TouchableOpacity\r\n                style={styles.btn}\r\n                activeOpacity={0.7}\r\n                onPress={() => keyboardHide()}\r\n              >\r\n                <Text style={styles.btnName}>Зарегистрироваться</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={styles.link}\r\n                activeOpacity={0.7}\r\n                onPress={() => keyboardHide()}\r\n              >\r\n                <Text style={styles.linkName}>Уже есть аккаунт? Войти</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </KeyboardAvoidingView>\r\n        </ImageBackground>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n  },\r\n\r\n  imgBG: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"flex-end\",\r\n    // alignItems: \"center\",\r\n  },\r\n\r\n  KAVWrapper: {\r\n    // flex: 1,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n\r\n  formWrapper: {\r\n    // height: 550,\r\n    paddingHorizontal: 16,\r\n    paddingTop: 92,\r\n    paddingBottom: 78,\r\n    borderTopLeftRadius: 25,\r\n    borderTopRightRadius: 25,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  avatarWrapper: {\r\n    height: 120,\r\n    width: 120,\r\n    position: \"absolute\",\r\n    backgroundColor: \"#F6F6F6\",\r\n    borderRadius: 16,\r\n    alignSelf: \"center\",\r\n    top: -60,\r\n  },\r\n\r\n  fotoWrapper: {\r\n    overflow: \"hidden\",\r\n    borderRadius: 16,\r\n  },\r\n\r\n  addAvatarBtn: {\r\n    position: \"absolute\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    right: -12,\r\n    bottom: 14,\r\n    height: 25,\r\n    width: 25,\r\n    borderWidth: 1,\r\n    borderRadius: 13,\r\n    borderColor: \"#FF6C00\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  titleWrapper: {\r\n    alignItems: \"center\",\r\n    marginBottom: 32,\r\n  },\r\n\r\n  title: {\r\n    // marginTop: 92,\r\n    color: `#212121`,\r\n    fontSize: 30,\r\n    letterSpacing: 0.01,\r\n    fontWeight: \"500\",\r\n    fontFamily: \"Roboto-Medium\",\r\n\r\n    // fontWeight: 500,\r\n    // lineHeight: 35,\r\n    // font-style: normal;\r\n  },\r\n\r\n  inpupWrapperLoginEmail: {\r\n    marginBottom: 16,\r\n  },\r\n\r\n  inputLoginEmail: {\r\n    borderWidth: 1,\r\n    // borderColor: \"#E8E8E8\",\r\n    borderRadius: 8,\r\n    backgroundColor: \"#F6F6F6\",\r\n    color: \"#212121\",\r\n    height: 50,\r\n    paddingHorizontal: 16,\r\n    fontFamily: \"Roboto-Regular\",\r\n    // placeholderTextColor: \"#BDBDBD\",\r\n  },\r\n\r\n  inpupWrapperPassword: {\r\n    marginBottom: 43,\r\n  },\r\n\r\n  inputPassword: {\r\n    borderWidth: 1,\r\n    // borderColor: \"#E8E8E8\",\r\n    borderRadius: 8,\r\n    backgroundColor: \"#F6F6F6\",\r\n    color: \"#212121\",\r\n    height: 50,\r\n    paddingHorizontal: 16,\r\n    fontFamily: \"Roboto-Regular\",\r\n  },\r\n\r\n  btn: {\r\n    backgroundColor: \"#FF6C00\",\r\n    height: 51,\r\n    borderRadius: 100,\r\n    paddingVertical: 16,\r\n  },\r\n\r\n  btnName: {\r\n    fontSize: 16,\r\n    color: \"#ffffff\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Roboto-Regular\",\r\n  },\r\n\r\n  btnToglePassword: {\r\n    position: \"absolute\",\r\n    bottom: 15,\r\n    right: 16,\r\n  },\r\n\r\n  toglePasswordText: {\r\n    fontSize: 16,\r\n    color: \"#1B4371\",\r\n    fontFamily: \"Roboto-Regular\",\r\n  },\r\n\r\n  link: {\r\n    marginTop: 16,\r\n  },\r\n\r\n  linkName: {\r\n    fontSize: 16,\r\n    color: \"#1B4371\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Roboto-Regular\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}